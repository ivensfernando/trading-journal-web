import { type Identifier } from '../types';
import { type RowClickFunctionBase } from './types';
export declare const DataTableCallbacksContext: import("react").Context<{
    handleSort?: (event: any) => void;
    handleToggleItem?: (id: Identifier, event: any) => void;
    isRowExpandable?: (record: any) => boolean;
    isRowSelectable?: (record: any) => boolean;
    onSelect?: ((ids: Identifier[]) => void) | undefined;
    rowClick?: string | RowClickFunctionBase | false;
}>;
export declare const useDataTableCallbacksContext: () => {
    handleSort?: (event: any) => void;
    handleToggleItem?: (id: Identifier, event: any) => void;
    isRowExpandable?: (record: any) => boolean;
    isRowSelectable?: (record: any) => boolean;
    onSelect?: ((ids: Identifier[]) => void) | undefined;
    rowClick?: string | RowClickFunctionBase | false;
};
//# sourceMappingURL=DataTableCallbacksContext.d.ts.map